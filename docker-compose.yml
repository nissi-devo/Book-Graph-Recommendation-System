version: '3.8'

services:
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: unless-stopped
    volumes:
      - ./db/neo4j/data:/data
      - ./db/neo4j/conf:/conf
      - ./db/neo4j/logs:/logs
      - ./db/neo4j/plugins:/plugins
    networks:
      - recommender-node

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow

  webserver:
    image: apache/airflow:latest
    container_name: airflow-webserver
    restart: always
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8000:8080"  # Expose Airflow webserver on port 8000
    command: webserver

  scheduler:
    image: apache/airflow:latest
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler

  fastapi:
    build: ./api
    container_name: fastapi
    ports:
      - "8080:8080"
    depends_on:
      - neo4j
    volumes:
      - ./api:/app
    env_file:
      - .env
    networks:
      - recommender-node

networks:
  recommender-node: